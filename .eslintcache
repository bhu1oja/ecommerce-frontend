[{"D:\\Projects\\Ecommerce\\frontend\\src\\index.js":"1","D:\\Projects\\Ecommerce\\frontend\\src\\api\\instances.js":"2","D:\\Projects\\Ecommerce\\frontend\\src\\api\\endpoints.js":"3","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Header\\index.js":"4","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Header\\style.js":"5","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Hero\\index.js":"6","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Hero\\style.js":"7","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Sidebar\\index.js":"8","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Sidebar\\style.js":"9","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Product\\index.js":"10","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Product\\style.js":"11","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Products\\index.js":"12","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\store.js":"13","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\product.js":"14","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\category.js":"15","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Search\\index.js":"16","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\user.js":"17","D:\\Projects\\Ecommerce\\frontend\\src\\App\\App.js":"18","D:\\Projects\\Ecommerce\\frontend\\src\\App\\Client.js":"19","D:\\Projects\\Ecommerce\\frontend\\src\\App\\Admin.js":"20","D:\\Projects\\Ecommerce\\frontend\\src\\utils.js":"21","D:\\Projects\\Ecommerce\\frontend\\src\\hoc\\withUserAuth.js":"22","D:\\Projects\\Ecommerce\\frontend\\src\\routes\\clientRoutes.js":"23","D:\\Projects\\Ecommerce\\frontend\\src\\routes\\appRoutes.js":"24","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Login\\index.js":"25","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Signup\\index.js":"26","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Profile\\index.js":"27","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\EditProfile\\index.js":"28","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Cart\\index.js":"29","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Home\\index.js":"30","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\SearchPage\\index.js":"31","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Shop\\index.js":"32","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\ProductPage\\index.js":"33","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\CategoryProducts\\index.js":"34","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Login\\style.js":"35","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Cart\\style.js":"36","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Profile\\style.js":"37","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Home\\style.js":"38","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\SearchPage\\style.js":"39","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\ProductPage\\style.js":"40","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Shop\\style.js":"41","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\CategoryProducts\\style.js":"42","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\admin.js":"43","D:\\Projects\\Ecommerce\\frontend\\src\\routes\\adminRoutes.js":"44","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Login\\index.js":"45","D:\\Projects\\Ecommerce\\frontend\\src\\hoc\\withAdminAuth.js":"46","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Home\\index.js":"47","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Home\\style.js":"48","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Review\\index.js":"49","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Review\\style.js":"50","D:\\Projects\\Ecommerce\\frontend\\src\\components\\AdminHeader\\index.js":"51","D:\\Projects\\Ecommerce\\frontend\\src\\components\\AdminHeader\\style.js":"52","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\index.js":"53","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\style.js":"54","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\Row.js":"55","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\Reviews.js":"56","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\ProductForm\\index.js":"57","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\ProductForm\\style.js":"58","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Categories\\index.js":"59","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Categories\\style.js":"60","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\CategoryForm\\index.js":"61","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\CategoryForm\\style.js":"62","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\index.js":"63","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\style.js":"64","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\Payment.js":"65","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\Shipping.js":"66","D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\order.js":"67","D:\\Projects\\Ecommerce\\frontend\\src\\components\\AddReview\\index.js":"68","D:\\Projects\\Ecommerce\\frontend\\src\\components\\AddReview\\style.js":"69","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Orders\\index.js":"70","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Order\\index.js":"71","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Orders\\style.js":"72","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Order\\style.js":"73","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Footer\\index.js":"74","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Footer\\style.js":"75"},{"size":1132,"mtime":1613754901835,"results":"76","hashOfConfig":"77"},{"size":599,"mtime":1612525985472,"results":"78","hashOfConfig":"77"},{"size":1772,"mtime":1614007673376,"results":"79","hashOfConfig":"77"},{"size":5429,"mtime":1614184554688,"results":"80","hashOfConfig":"77"},{"size":1012,"mtime":1613044400698,"results":"81","hashOfConfig":"77"},{"size":56190,"mtime":1612628538000,"results":"82","hashOfConfig":"77"},{"size":872,"mtime":1612616071897,"results":"83","hashOfConfig":"77"},{"size":4651,"mtime":1614183850854,"results":"84","hashOfConfig":"77"},{"size":375,"mtime":1612711357731,"results":"85","hashOfConfig":"77"},{"size":2234,"mtime":1613047622721,"results":"86","hashOfConfig":"77"},{"size":586,"mtime":1612774250943,"results":"87","hashOfConfig":"77"},{"size":360,"mtime":1613473333225,"results":"88","hashOfConfig":"77"},{"size":513,"mtime":1613724309992,"results":"89","hashOfConfig":"77"},{"size":3329,"mtime":1614184040164,"results":"90","hashOfConfig":"77"},{"size":717,"mtime":1612705797991,"results":"91","hashOfConfig":"77"},{"size":1067,"mtime":1613049081382,"results":"92","hashOfConfig":"77"},{"size":6549,"mtime":1614184493985,"results":"93","hashOfConfig":"77"},{"size":1040,"mtime":1614186290655,"results":"94","hashOfConfig":"77"},{"size":797,"mtime":1613103847008,"results":"95","hashOfConfig":"77"},{"size":812,"mtime":1614102202245,"results":"96","hashOfConfig":"77"},{"size":111,"mtime":1613020340683,"results":"97","hashOfConfig":"77"},{"size":494,"mtime":1614230872992,"results":"98","hashOfConfig":"77"},{"size":1861,"mtime":1614101580932,"results":"99","hashOfConfig":"77"},{"size":255,"mtime":1613104045545,"results":"100","hashOfConfig":"77"},{"size":2244,"mtime":1613192711285,"results":"101","hashOfConfig":"77"},{"size":2527,"mtime":1613192743277,"results":"102","hashOfConfig":"77"},{"size":1593,"mtime":1613192609583,"results":"103","hashOfConfig":"77"},{"size":2366,"mtime":1613192698492,"results":"104","hashOfConfig":"77"},{"size":4569,"mtime":1614101991640,"results":"105","hashOfConfig":"77"},{"size":1221,"mtime":1613205433384,"results":"106","hashOfConfig":"77"},{"size":1338,"mtime":1613192667166,"results":"107","hashOfConfig":"77"},{"size":966,"mtime":1613192675022,"results":"108","hashOfConfig":"77"},{"size":4822,"mtime":1613208261492,"results":"109","hashOfConfig":"77"},{"size":1107,"mtime":1613192634748,"results":"110","hashOfConfig":"77"},{"size":546,"mtime":1613024083157,"results":"111","hashOfConfig":"77"},{"size":446,"mtime":1613115347021,"results":"112","hashOfConfig":"77"},{"size":407,"mtime":1613030591307,"results":"113","hashOfConfig":"77"},{"size":262,"mtime":1612628388713,"results":"114","hashOfConfig":"77"},{"size":170,"mtime":1613049688800,"results":"115","hashOfConfig":"77"},{"size":1075,"mtime":1613208328354,"results":"116","hashOfConfig":"77"},{"size":170,"mtime":1612771555458,"results":"117","hashOfConfig":"77"},{"size":170,"mtime":1612770232470,"results":"118","hashOfConfig":"77"},{"size":10433,"mtime":1614231083887,"results":"119","hashOfConfig":"77"},{"size":1569,"mtime":1614230793795,"results":"120","hashOfConfig":"77"},{"size":1966,"mtime":1613194403002,"results":"121","hashOfConfig":"77"},{"size":516,"mtime":1614230853155,"results":"122","hashOfConfig":"77"},{"size":1319,"mtime":1613209371723,"results":"123","hashOfConfig":"77"},{"size":417,"mtime":1613209283211,"results":"124","hashOfConfig":"77"},{"size":765,"mtime":1613208201337,"results":"125","hashOfConfig":"77"},{"size":479,"mtime":1613208297670,"results":"126","hashOfConfig":"77"},{"size":2270,"mtime":1613212772122,"results":"127","hashOfConfig":"77"},{"size":295,"mtime":1613213604818,"results":"128","hashOfConfig":"77"},{"size":2431,"mtime":1614102406197,"results":"129","hashOfConfig":"77"},{"size":726,"mtime":1613408693595,"results":"130","hashOfConfig":"77"},{"size":4467,"mtime":1613492163773,"results":"131","hashOfConfig":"77"},{"size":625,"mtime":1613288180618,"results":"132","hashOfConfig":"77"},{"size":6556,"mtime":1614102379166,"results":"133","hashOfConfig":"77"},{"size":678,"mtime":1613404001825,"results":"134","hashOfConfig":"77"},{"size":3576,"mtime":1614102313682,"results":"135","hashOfConfig":"77"},{"size":371,"mtime":1613560019043,"results":"136","hashOfConfig":"77"},{"size":2359,"mtime":1614230883744,"results":"137","hashOfConfig":"77"},{"size":437,"mtime":1613561088478,"results":"138","hashOfConfig":"77"},{"size":5172,"mtime":1614183682974,"results":"139","hashOfConfig":"77"},{"size":1164,"mtime":1613741249069,"results":"140","hashOfConfig":"77"},{"size":1372,"mtime":1613751314612,"results":"141","hashOfConfig":"77"},{"size":2039,"mtime":1613752096149,"results":"142","hashOfConfig":"77"},{"size":1980,"mtime":1613897562943,"results":"143","hashOfConfig":"77"},{"size":2359,"mtime":1614005095220,"results":"144","hashOfConfig":"77"},{"size":216,"mtime":1614002513148,"results":"145","hashOfConfig":"77"},{"size":3513,"mtime":1614181349509,"results":"146","hashOfConfig":"77"},{"size":8133,"mtime":1614181541496,"results":"147","hashOfConfig":"77"},{"size":327,"mtime":1613890660015,"results":"148","hashOfConfig":"77"},{"size":558,"mtime":1613915659403,"results":"149","hashOfConfig":"77"},{"size":627,"mtime":1614188633812,"results":"150","hashOfConfig":"77"},{"size":414,"mtime":1614188645239,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"fyog7a",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"154"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"154"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"D:\\Projects\\Ecommerce\\frontend\\src\\index.js",[],["322","323"],"D:\\Projects\\Ecommerce\\frontend\\src\\api\\instances.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\api\\endpoints.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Header\\index.js",["324"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Hidden,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\nimport {\r\n  ExpandMoreOutlined,\r\n  HomeOutlined,\r\n  CategoryOutlined,\r\n  Storefront,\r\n  PermIdentityOutlined,\r\n  ExitToAppOutlined,\r\n  VpnKeyOutlined,\r\n  ShoppingCartOutlined,\r\n  LocalMallOutlined,\r\n} from \"@material-ui/icons\";\r\nimport { Sidebar } from \"../Sidebar/\";\r\nimport { MenuRounded } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCategories } from \"../../redux/slices/category\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Search } from \"../Search/\";\r\nimport { userLogout } from \"../../redux/slices/user\";\r\n\r\nexport const Header = () => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector((state) => state.categories.categories);\r\n  const user = useSelector((state) => state.users.user);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n  const cartItems = user?.cart?.items?.reduce((total, value) => {\r\n    return value.quantity + total;\r\n  }, 0);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, []);\r\n\r\n  const closeDropdownHandler = () => setAnchorEl(null);\r\n  const openDropdownHandler = (e) => setAnchorEl(e.currentTarget);\r\n\r\n  const handleOpenSidebar = () => setOpenSidebar(true);\r\n  const handleCloseSidebar = () => setOpenSidebar(false);\r\n\r\n  const dropdown = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      open={!!anchorEl}\r\n      keepMounted\r\n      onClose={closeDropdownHandler}\r\n    >\r\n      {categories.map(({ _id, name }) => (\r\n        <MenuItem\r\n          component={NavLink}\r\n          to={`/category/${_id}`}\r\n          onClick={closeDropdownHandler}\r\n          key={_id}\r\n        >\r\n          {name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"sticky\"\r\n      className={classes.root}\r\n      style={{ backgroundColor: \"white\" }}\r\n    >\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.heading}\r\n          variant=\"h4\"\r\n          component={NavLink}\r\n          to=\"/\"\r\n          exact\r\n        >\r\n          ReactShop\r\n        </Typography>\r\n\r\n        <Hidden smDown>\r\n          <Search className={classes.input} />\r\n        </Hidden>\r\n\r\n        <Hidden mdDown>\r\n          <Typography\r\n            component={NavLink}\r\n            activeClassName={classes.activeLink}\r\n            exact\r\n            to=\"/\"\r\n            className={classes.navItems}\r\n          >\r\n            <HomeOutlined /> Home\r\n          </Typography>\r\n\r\n          <Typography\r\n            component={NavLink}\r\n            activeClassName={classes.activeLink}\r\n            exact\r\n            to=\"/shop\"\r\n            className={classes.navItems}\r\n          >\r\n            <Storefront /> Shop\r\n          </Typography>\r\n\r\n          <Typography\r\n            className={classes.navItems}\r\n            onClick={openDropdownHandler}\r\n          >\r\n            <CategoryOutlined /> Category <ExpandMoreOutlined />\r\n          </Typography>\r\n\r\n          {user ? (\r\n            <>\r\n              <Typography\r\n                component={NavLink}\r\n                activeClassName={classes.activeLink}\r\n                exact\r\n                to=\"/profile\"\r\n                className={classes.navItems}\r\n              >\r\n                <PermIdentityOutlined /> Profile\r\n              </Typography>\r\n              <Typography\r\n                component={NavLink}\r\n                activeClassName={classes.activeLink}\r\n                exact\r\n                to=\"/cart\"\r\n                className={classes.navItems}\r\n              >\r\n                <ShoppingCartOutlined />{\" \"}\r\n                <Badge badgeContent={cartItems} color=\"primary\">\r\n                  Cart\r\n                </Badge>\r\n              </Typography>\r\n              <Typography\r\n                component={NavLink}\r\n                activeClassName={classes.activeLink}\r\n                exact\r\n                to=\"/orders\"\r\n                className={classes.navItems}\r\n              >\r\n                <LocalMallOutlined />{\" \"}\r\n                <Badge badgeContent={cartItems} color=\"primary\">\r\n                  Orders\r\n                </Badge>\r\n              </Typography>\r\n              <Typography\r\n                className={classes.navItems}\r\n                onClick={() => dispatch(userLogout())}\r\n              >\r\n                <ExitToAppOutlined /> Logout\r\n              </Typography>\r\n            </>\r\n          ) : (\r\n            <Typography\r\n              component={NavLink}\r\n              activeClassName={classes.activeLink}\r\n              exact\r\n              to=\"/login\"\r\n              className={classes.navItems}\r\n            >\r\n              <VpnKeyOutlined /> Login\r\n            </Typography>\r\n          )}\r\n        </Hidden>\r\n\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            onClick={handleOpenSidebar}\r\n            style={{ marginLeft: \"auto\" }}\r\n          >\r\n            <MenuRounded className={classes.menuIcon} />\r\n          </IconButton>\r\n        </Hidden>\r\n\r\n        {dropdown}\r\n\r\n        <Sidebar\r\n          cartItems={cartItems}\r\n          open={openSidebar}\r\n          onClose={handleCloseSidebar}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\components\\Header\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Hero\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Hero\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Sidebar\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Sidebar\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Product\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Product\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Products\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\store.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\product.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\category.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Search\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\user.js",["325"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { Axios, UserAxios } from \"../../api/instances\";\r\nimport * as Api from \"../../api/endpoints\";\r\nimport { history } from \"../../utils\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  loading: false,\r\n  authLoading: false,\r\n  cartLoading: false,\r\n};\r\n\r\nconst signup = createAsyncThunk(\r\n  \"users/signup\",\r\n  async ({ name, email, password }) => {\r\n    try {\r\n      const res = await Axios.post(Api.USER_SIGNUP, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      history.push(\"/\");\r\n      return res.data;\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst login = createAsyncThunk(\"users/login\", async ({ email, password }) => {\r\n  try {\r\n    const res = await Axios.post(Api.USER_LOGIN, {\r\n      email,\r\n      password,\r\n    });\r\n    history.push(\"/\");\r\n    return res.data;\r\n  } catch (error) {\r\n    throw error?.response?.data || error.message;\r\n  }\r\n});\r\n\r\nconst isLogin = createAsyncThunk(\"users/isLogin\", async () => {\r\n  const token = localStorage.getItem(\"userToken\");\r\n  if (!token) throw \"ERROR!\";\r\n\r\n  const res = await UserAxios.get(Api.IS_USER_LOGIN);\r\n  return res.data.user;\r\n});\r\n\r\nconst editUser = createAsyncThunk(\r\n  \"users/editUser\",\r\n  async ({ name, email, password }) => {\r\n    try {\r\n      const res = await UserAxios.patch(Api.UPDATE_USER, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      history.push(\"/profile\");\r\n      return res.data.user;\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst addToCart = createAsyncThunk(\"users/addToCart\", async (id) => {\r\n  try {\r\n    const res = await UserAxios.post(Api.ADD_TO_CART(id));\r\n    return res.data.user;\r\n  } catch (error) {\r\n    throw error?.response?.data || error.message;\r\n  }\r\n});\r\n\r\nconst decrementFromCart = createAsyncThunk(\r\n  \"users/decrementFromCart\",\r\n  async (id) => {\r\n    try {\r\n      const res = await UserAxios.delete(Api.DECREMENT_FROM_CART(id));\r\n      return res.data.user;\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst deleteFromCart = createAsyncThunk(\"users/deleteFromCart\", async (id) => {\r\n  try {\r\n    const res = await UserAxios.delete(Api.DELETE_FROM_CART(id));\r\n    return res.data.user;\r\n  } catch (error) {\r\n    throw error?.response?.data || error.message;\r\n  }\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    userLogout(state, action) {\r\n      localStorage.removeItem(\"userToken\");\r\n      state.user = null;\r\n      NotificationManager.success(\"Logged out!\");\r\n    },\r\n    emptyCart(state, action) {\r\n      state.user.cart = {\r\n        items: [],\r\n        price: 0,\r\n      };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(signup.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(signup.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        localStorage.setItem(\"userToken\", `Bearer ${action.payload.token}`);\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Signed up!\");\r\n      })\r\n      .addCase(signup.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(login.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        localStorage.setItem(\"userToken\", `Bearer ${action.payload.token}`);\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Logged in!\");\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(isLogin.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(isLogin.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(isLogin.rejected, (state, action) => {\r\n        state.loading = false;\r\n        localStorage.removeItem(\"userToken\");\r\n      })\r\n      .addCase(editUser.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(editUser.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Profile updated!\");\r\n      })\r\n      .addCase(editUser.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(addToCart.pending, (state, action) => {\r\n        state.cartLoading = true;\r\n      })\r\n      .addCase(addToCart.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.cartLoading = false;\r\n        NotificationManager.success(\"Added to cart\");\r\n      })\r\n      .addCase(addToCart.rejected, (state, action) => {\r\n        state.cartLoading = false;\r\n        if (action.error.message === \"Unauthenticated\") {\r\n          NotificationManager.error(\"Login to continue!\");\r\n        } else {\r\n          NotificationManager.error(action.error.message);\r\n        }\r\n      })\r\n      .addCase(decrementFromCart.pending, (state, action) => {\r\n        state.cartLoading = true;\r\n      })\r\n      .addCase(decrementFromCart.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.cartLoading = false;\r\n      })\r\n      .addCase(decrementFromCart.rejected, (state, action) => {\r\n        state.cartLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(deleteFromCart.pending, (state, action) => {\r\n        state.cartLoading = true;\r\n      })\r\n      .addCase(deleteFromCart.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.cartLoading = false;\r\n        NotificationManager.success(\"Item removed!\");\r\n      })\r\n      .addCase(deleteFromCart.rejected, (state, action) => {\r\n        state.cartLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      });\r\n  },\r\n});\r\n\r\nexport {\r\n  signup,\r\n  login,\r\n  isLogin,\r\n  editUser,\r\n  addToCart,\r\n  decrementFromCart,\r\n  deleteFromCart,\r\n};\r\n\r\nexport const { userLogout, emptyCart } = usersSlice.actions;\r\n\r\nexport default usersSlice.reducer;\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\App\\App.js",["326"],"import { useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { setHistory } from \"../utils\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { appRoutes } from \"../routes/appRoutes\";\nimport { Footer } from \"../components/Footer/\";\n\nexport const App = () => {\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: \"Josefin Sans, sans-serif\",\n    },\n    palette: {\n      primary: {\n        main: \"#3399FF\",\n      },\n      secondary: {\n        main: \"#EF837B\",\n      },\n    },\n  });\n\n  const history = useHistory();\n\n  // Initializing the history object so that we can use it in redux\n  useEffect(() => setHistory(history), []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n        {appRoutes.map((route) => (\n          <Route {...route} />\n        ))}\n      </Switch>\n      <Footer />\n      <NotificationContainer />\n    </ThemeProvider>\n  );\n};\n","D:\\Projects\\Ecommerce\\frontend\\src\\App\\Client.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\App\\Admin.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\utils.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\hoc\\withUserAuth.js",["327"],"D:\\Projects\\Ecommerce\\frontend\\src\\routes\\clientRoutes.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\routes\\appRoutes.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Login\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Signup\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Profile\\index.js",["328"],"import {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\r\n\r\nexport const Profile = withUserAuth(true)((props) => {\r\n  const classes = useStyles();\r\n  const { push } = useHistory();\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Typography variant=\"h3\" className={classes.heading}>\r\n        Your Profile\r\n      </Typography>\r\n\r\n      <TableContainer component={Paper} className={classes.tableContainer}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component=\"th\">Name</TableCell>\r\n              <TableCell>{user?.name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\">Email</TableCell>\r\n              <TableCell>{user?.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Button\r\n                  onClick={() => push(\"/edit-profile\")}\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\EditProfile\\index.js",["329"],"import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"../Login/style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editUser } from \"../../../redux/slices/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\r\n\r\nexport const EditProfile = withUserAuth(true)((props) => {\r\n  const classes = useStyles();\r\n  const user = useSelector((state) => state.users.user);\r\n  const [name, setName] = useState(user?.name);\r\n  const [email, setEmail] = useState(user?.email);\r\n  const [password, setPassword] = useState(user?.password);\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.users.authLoading);\r\n\r\n  const changeNameHandler = (e) => setName(e.target.value);\r\n  const changeEmailHandler = (e) => setEmail(e.target.value);\r\n  const changePasswordHandler = (e) => setPassword(e.target.value);\r\n\r\n  const editHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editUser({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      <Typography variant=\"h3\" className={classes.heading}>\r\n        Edit Profile\r\n      </Typography>\r\n\r\n      <Paper component=\"form\" className={classes.form} onSubmit={editHandler}>\r\n        <TextField\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          value={name}\r\n          onChange={changeNameHandler}\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          className={classes.textField}\r\n          value={email}\r\n          onChange={changeEmailHandler}\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          className={classes.textField}\r\n          value={password}\r\n          onChange={changePasswordHandler}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ color: \"white\" }}\r\n          disabled={loading}\r\n          endIcon={\r\n            loading ? <CircularProgress size={20} color=\"primary\" /> : null\r\n          }\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Cart\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Home\\index.js",["330"],"import { useEffect } from \"react\";\r\nimport { Container, Typography, Hidden } from \"@material-ui/core\";\r\nimport { Hero } from \"../../../components/Hero/\";\r\nimport { Products } from \"../../../components/Products/\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAllProducts } from \"../../../redux/slices/product\";\r\nimport { Search } from \"../../../components/Search/\";\r\n\r\nexport const Home = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const products = useSelector((state) => state.products.products);\r\n  const loading = useSelector((state) => state.products.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllProducts());\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Hero />\r\n\r\n      <Typography\r\n        variant=\"h3\"\r\n        style={{ fontWeight: \"bold\", marginBottom: \"30px\" }}\r\n        id=\"products\"\r\n      >\r\n        Our Products\r\n      </Typography>\r\n\r\n      <Hidden mdUp>\r\n        <Search className={classes.input} />\r\n      </Hidden>\r\n\r\n      {loading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <Products products={products} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\SearchPage\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Shop\\index.js",["331"],"import { useEffect } from \"react\";\r\nimport { Products } from \"../../../components/Products/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAllProducts } from \"../../../redux/slices/product\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const Shop = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const products = useSelector((state) => state.products.products);\r\n  const loading = useSelector((state) => state.products.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllProducts());\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {loading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\" className={classes.heading}>\r\n            Our Products\r\n          </Typography>\r\n          <Products products={products} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\ProductPage\\index.js",["332","333","334"],"import { useEffect } from \"react\";\r\nimport { useStyles, BigTooltip } from \"./style\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Badge,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Avatar,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProduct } from \"../../../redux/slices/product\";\r\nimport moment from \"moment\";\r\nimport { addToCart } from \"../../../redux/slices/user\";\r\nimport { Review } from \"../../../components/Review/\";\r\n\r\nexport const ProductPage = () => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.products.product);\r\n  const cartLoading = useSelector((state) => state.users.cartLoading);\r\n  const loading = useSelector((state) => state.products.loading);\r\n  const { id } = useParams();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProduct(id));\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      {loading || !product ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={6} xs={12}>\r\n              <div className={classes.img}>\r\n                <img src={product.image} />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item md={6} xs={12}>\r\n              <Typography variant=\"h3\" className={classes.heading}>\r\n                {product.name}\r\n              </Typography>\r\n\r\n              <BigTooltip\r\n                title={`${product.rating} Rating`}\r\n                placement=\"top-start\"\r\n                arrow\r\n              >\r\n                <div className={classes.rating}>\r\n                  <Rating precision=\"0.1\" value={product.rating} readOnly />\r\n                  <Typography>({product.reviews.length} Reviews)</Typography>\r\n                </div>\r\n              </BigTooltip>\r\n\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n                className={classes.price}\r\n              >\r\n                ${product.price}\r\n              </Typography>\r\n              {/* <Typography>{product.description}</Typography> */}\r\n              <Typography>\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s.\r\n              </Typography>\r\n              <Badge\r\n                badgeContent=\"Out of stock\"\r\n                color=\"primary\"\r\n                className={classes.badge}\r\n                invisible={product.quantity}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  disabled={!product.quantity || cartLoading}\r\n                  onClick={() => dispatch(addToCart(product._id))}\r\n                  endIcon={\r\n                    cartLoading ? (\r\n                      <CircularProgress size={20} color=\"primary\" />\r\n                    ) : null\r\n                  }\r\n                >\r\n                  Add to cart\r\n                </Button>\r\n              </Badge>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TableContainer component={Paper} className={classes.tableContainer}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product Details</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\">Category</TableCell>\r\n                  <TableCell>{product.category.name}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\">Created</TableCell>\r\n                  <TableCell>{moment(product.created).fromNow()}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\">Quantity in stock</TableCell>\r\n                  <TableCell>{product.quantity}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\">Sold</TableCell>\r\n                  <TableCell>{product.sold}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <Typography variant=\"h5\">\r\n            Reviews ({product.reviews.length})\r\n          </Typography>\r\n          {product.reviews.map((review) => (\r\n            <Review key={review._id} review={review} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\CategoryProducts\\index.js",["335"],"import { useEffect } from \"react\";\r\nimport { Products } from \"../../../components/Products/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCategoryProducts } from \"../../../redux/slices/product\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const CategoryProducts = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const products = useSelector((state) => state.products.products);\r\n  const loading = useSelector((state) => state.products.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategoryProducts(id));\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {loading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\" className={classes.heading}>\r\n            Products related to '{products[0]?.category?.name}'\r\n          </Typography>\r\n          <Products products={products} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Login\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Cart\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Profile\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Home\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\SearchPage\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\ProductPage\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Shop\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\CategoryProducts\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\admin.js",["336","337","338","339"],"import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n} from \"@reduxjs/toolkit\";\r\nimport { AdminAxios, Axios } from \"../../api/instances\";\r\nimport * as Api from \"../../api/endpoints\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { history } from \"../../utils\";\r\n\r\nconst login = createAsyncThunk(\"admin/login\", async ({ email, password }) => {\r\n  try {\r\n    const res = await Axios.post(Api.ADMIN_LOGIN, {\r\n      email,\r\n      password,\r\n    });\r\n    history.push(\"/admin\");\r\n    NotificationManager.success(\"Logged in!\");\r\n    return res.data;\r\n  } catch (error) {\r\n    throw error?.response?.data || error.message;\r\n  }\r\n});\r\n\r\nconst isLogin = createAsyncThunk(\"admin/isLogin\", async () => {\r\n  const token = localStorage.getItem(\"adminToken\");\r\n  if (!token) throw \"ERROR!\";\r\n\r\n  const res = await AdminAxios.get(Api.IS_ADMIN_LOGIN);\r\n  return res.data;\r\n});\r\n\r\nconst fetchProducts = createAsyncThunk(\"admin/fetchProducts\", async () => {\r\n  const res = await AdminAxios.get(Api.ADMIN_PRODUCTS);\r\n  return res.data.products;\r\n});\r\n\r\nconst createProduct = createAsyncThunk(\r\n  \"admin/createProduct\",\r\n  async ({ name, description, file, status, category, price, quantity }) => {\r\n    try {\r\n      if (!file) throw new Error(\"Upload image!\");\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"Ecommerce Images\");\r\n      const res = await Axios.post(\r\n        \"https://api.cloudinary.com/v1_1/dw3ap99ie/image/upload\",\r\n        data\r\n      );\r\n      await AdminAxios.post(Api.CREATE_PRODUCT, {\r\n        name,\r\n        description,\r\n        status,\r\n        category,\r\n        price,\r\n        quantity,\r\n        image: res.data.secure_url,\r\n      });\r\n      history.push(\"/admin/products\");\r\n      return \"Product created!\";\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst editProduct = createAsyncThunk(\r\n  \"admin/editProduct\",\r\n  async ({\r\n    id,\r\n    name,\r\n    description,\r\n    file,\r\n    status,\r\n    category,\r\n    price,\r\n    quantity,\r\n  }) => {\r\n    try {\r\n      if (!file) throw new Error(\"Upload image!\");\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"Ecommerce Images\");\r\n      const res = await Axios.post(\r\n        \"https://api.cloudinary.com/v1_1/dw3ap99ie/image/upload\",\r\n        data\r\n      );\r\n\r\n      await AdminAxios.patch(Api.UPDATE_PRODUCT(id), {\r\n        name,\r\n        description,\r\n        status,\r\n        category,\r\n        price,\r\n        quantity,\r\n        image: res.data.secure_url,\r\n      });\r\n      history.push(\"/admin/products\");\r\n      return \"Product updated!\";\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst deleteProduct = createAsyncThunk(\"admin/deleteProduct\", async (id) => {\r\n  const res = await AdminAxios.delete(Api.DELETE_PRODUCT(id));\r\n  return res.data.product._id;\r\n});\r\n\r\nconst fetchCategories = createAsyncThunk(\"admin/fetchCategories\", async () => {\r\n  const res = await Axios.get(Api.GET_CATEGORIES);\r\n  return res.data.categories;\r\n});\r\n\r\nconst createCategory = createAsyncThunk(\r\n  \"admin/createCategory\",\r\n  async ({ name }) => {\r\n    try {\r\n      const res = await AdminAxios.post(Api.CREATE_CATEGORY, { name });\r\n      history.push(\"/admin/categories\");\r\n      NotificationManager.success(\"Category created!\");\r\n      return res.data.category;\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst editCategory = createAsyncThunk(\r\n  \"admin/editCategory\",\r\n  async ({ id, name }) => {\r\n    try {\r\n      const res = await AdminAxios.patch(Api.UPDATE_CATEGORY(id), { name });\r\n      history.push(\"/admin/categories\");\r\n      NotificationManager.success(\"Category updated!\");\r\n      return res.data.category;\r\n    } catch (error) {\r\n      throw error?.response?.data || error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst deleteCategory = createAsyncThunk(\"admin/deleteCategory\", async (id) => {\r\n  const res = await AdminAxios.delete(Api.DELETE_CATEGORY(id));\r\n  return res.data.category._id;\r\n});\r\n\r\nconst fetchAdminOrders = createAsyncThunk(\r\n  \"admin/fetchAdminOrders\",\r\n  async () => {\r\n    const res = await AdminAxios.get(Api.ADMIN_ORDERS);\r\n    return res.data.orders;\r\n  }\r\n);\r\n\r\nconst fetchAdminOrder = createAsyncThunk(\r\n  \"admin/fetchAdminOrder\",\r\n  async (id) => {\r\n    const res = await AdminAxios.get(Api.ADMIN_ORDER(id));\r\n    return res.data.order;\r\n  }\r\n);\r\n\r\nconst editAdminOrder = createAsyncThunk(\r\n  \"admin/editAdminOrder\",\r\n  async ({ id, status }) => {\r\n    const res = await AdminAxios.patch(Api.UPDATE_ORDER(id), { status });\r\n    NotificationManager.success(\"Order's status updated!\");\r\n    return res.data.order;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  admin: true,\r\n  authLoading: false,\r\n  loading: false,\r\n  products: [],\r\n  contentLoading: false,\r\n  categories: [],\r\n  orders: [],\r\n};\r\n\r\nconst adminSlice = createSlice({\r\n  name: \"admin\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.admin = true;\r\n        localStorage.setItem(\"adminToken\", `Bearer ${action.payload.token}`);\r\n        state.authLoading = false;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(isLogin.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(isLogin.fulfilled, (state, action) => {\r\n        state.admin = true;\r\n        state.loading = false;\r\n      })\r\n      .addCase(isLogin.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.admin = false;\r\n        localStorage.removeItem(\"adminToken\");\r\n      })\r\n      .addCase(fetchProducts.pending, (state, action) => {\r\n        state.contentLoading = true;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.products = action.payload;\r\n        state.contentLoading = false;\r\n      })\r\n      .addCase(createProduct.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(createProduct.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Product created!\");\r\n      })\r\n      .addCase(createProduct.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(editProduct.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(editProduct.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Product updated!\");\r\n      })\r\n      .addCase(editProduct.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(deleteProduct.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(deleteProduct.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Product deleted!\");\r\n        state.products = state.products.filter(\r\n          ({ _id }) => _id != action.payload\r\n        );\r\n      })\r\n      .addCase(deleteProduct.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(fetchCategories.pending, (state, action) => {\r\n        state.contentLoading = true;\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, action) => {\r\n        state.categories = action.payload;\r\n        state.contentLoading = false;\r\n      })\r\n      .addCase(fetchCategories.rejected, (state, action) => {\r\n        state.contentLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(createCategory.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(createCategory.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n      })\r\n      .addCase(createCategory.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(editCategory.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(editCategory.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n      })\r\n      .addCase(editCategory.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(deleteCategory.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(deleteCategory.fulfilled, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.success(\"Category deleted!\");\r\n        state.categories = state.categories.filter(\r\n          ({ _id }) => _id != action.payload\r\n        );\r\n      })\r\n      .addCase(deleteCategory.rejected, (state, action) => {\r\n        state.authLoading = false;\r\n        NotificationManager.error(action.error.message);\r\n      })\r\n      .addCase(fetchAdminOrders.pending, (state, action) => {\r\n        state.contentLoading = true;\r\n      })\r\n      .addCase(fetchAdminOrders.fulfilled, (state, action) => {\r\n        state.orders = action.payload;\r\n        state.contentLoading = false;\r\n      })\r\n      .addCase(fetchAdminOrder.pending, (state, action) => {\r\n        state.contentLoading = true;\r\n      })\r\n      .addCase(fetchAdminOrder.fulfilled, (state, action) => {\r\n        state.order = action.payload;\r\n        state.contentLoading = false;\r\n      })\r\n      .addCase(editAdminOrder.pending, (state, action) => {\r\n        state.authLoading = true;\r\n      })\r\n      .addCase(editAdminOrder.fulfilled, (state, action) => {\r\n        state.order = action.payload;\r\n        state.authLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport {\r\n  login,\r\n  isLogin,\r\n  fetchProducts,\r\n  createProduct,\r\n  editProduct,\r\n  deleteProduct,\r\n  fetchCategories,\r\n  createCategory,\r\n  editCategory,\r\n  deleteCategory,\r\n  fetchAdminOrders,\r\n  fetchAdminOrder,\r\n  editAdminOrder,\r\n};\r\n\r\nexport default adminSlice.reducer;\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\routes\\adminRoutes.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Login\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\hoc\\withAdminAuth.js",["340"],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Home\\index.js",["341","342"],"import {\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home = withAdminAuth(true)((props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item md={2}>\r\n            <Paper className={classes.paper}>\r\n              <Typography component={Link} to=\"/admin/products\" variant=\"h6\">\r\n                Products\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Paper className={classes.paper}>\r\n              <Typography component={Link} to=\"/admin/categories\" variant=\"h6\">\r\n                Categories\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Paper className={classes.paper}>\r\n              <Typography component={Link} to=\"/admin/orders\" variant=\"h6\">\r\n                Orders\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Home\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Review\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Review\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\AdminHeader\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\AdminHeader\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\index.js",["343","344","345","346","347","348"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlineOutlined,\r\n  Add,\r\n  KeyboardArrowDown,\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../../redux/slices/admin\";\r\nimport { Row } from \"./Row\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\r\n\r\nexport const Products = withAdminAuth(true)((props) => {\r\n  const { push } = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const products = useSelector((state) => state.admin.products);\r\n  const loading = useSelector((state) => state.admin.contentLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {loading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\" className={classes.heading}>\r\n            Products\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"auto\", display: \"flex\" }}\r\n            size=\"large\"\r\n            startIcon={<Add />}\r\n            onClick={() => push(\"/admin/create-product\")}\r\n          >\r\n            Create\r\n          </Button>\r\n\r\n          <TableContainer component={Paper} className={classes.tableContainer}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Image</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Price</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Sold</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {products.map((product) => (\r\n                  <Row product={product} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\Row.js",["349","350"],"import { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Collapse,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardArrowDown,\r\n  KeyboardArrowUp,\r\n  EditOutlined,\r\n  DeleteOutlineOutlined,\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport moment from \"moment\";\r\nimport { Reviews } from \"./Reviews\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteProduct } from \"../../../redux/slices/admin\";\r\n\r\nexport const Row = ({ product }) => {\r\n  const { push } = useHistory();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.admin.authLoading);\r\n  const [openReviews, setOpenReviews] = useState(false);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => setOpenReviews(false);\r\n  const handleOpen = () => setOpenReviews(true);\r\n\r\n  const deleteProductHandler = () => {\r\n    dispatch(deleteProduct(product._id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow key={product._id} className={classes.row}>\r\n        <TableCell>\r\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.img}>\r\n            <img src={product.image} />\r\n          </div>\r\n        </TableCell>\r\n        <TableCell>{product.name}</TableCell>\r\n        <TableCell>${product.price}</TableCell>\r\n        <TableCell>{product.quantity}</TableCell>\r\n        <TableCell>{product.sold}</TableCell>\r\n        <TableCell>{product.status}</TableCell>\r\n        <TableCell>\r\n          {loading ? (\r\n            <CircularProgress size={20} color=\"primary\" />\r\n          ) : (\r\n            <>\r\n              <IconButton\r\n                onClick={() => push(`/admin/edit-product/${product._id}`)}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                <EditOutlined />\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                onClick={deleteProductHandler}\r\n              >\r\n                <DeleteOutlineOutlined />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell colSpan={8} style={{ paddingBottom: 0, paddingTop: 0 }}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box marginTop={2} paddingBottom={2}>\r\n              <Typography variant=\"h5\">More Detail</Typography>\r\n              <Table\r\n                size=\"small\"\r\n                style={{ marginTop: \"10px\" }}\r\n                component={Paper}\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell>Created</TableCell>\r\n                    <TableCell>Rating</TableCell>\r\n                    <TableCell>Reviews</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  <TableCell>{product.description}</TableCell>\r\n                  <TableCell>{product.category.name}</TableCell>\r\n                  <TableCell>{moment(product.created).fromNow()}</TableCell>\r\n                  <TableCell>{product.rating || \"No rating\"}</TableCell>\r\n                  <TableCell>{product.reviews.length}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      style={{ color: \"white\" }}\r\n                      onClick={handleOpen}\r\n                    >\r\n                      View Reviews\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Reviews\r\n        open={openReviews}\r\n        onClose={handleClose}\r\n        reviews={product.reviews}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Products\\Reviews.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\ProductForm\\index.js",["351","352"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { CameraAltOutlined } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { AdminAxios, Axios } from \"../../../api/instances\";\r\nimport * as Api from \"../../../api/endpoints\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createProduct, editProduct } from \"../../../redux/slices/admin\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\r\n\r\nexport const ProductForm = withAdminAuth(true)(({ edit }) => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [productLoading, setProductLoading] = useState(false);\r\n  const loading = useSelector((state) => state.admin.authLoading);\r\n  const classes = useStyles();\r\n  const [categories, setCategories] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState();\r\n  const [status, setStatus] = useState(\"PUBLIC\");\r\n  const [src, setSrc] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [price, setPrice] = useState();\r\n  const [quantity, setQuantity] = useState();\r\n\r\n  const changeNameHandler = (e) => setName(e.target.value);\r\n  const changeDescriptionHandler = (e) => setDescription(e.target.value);\r\n  const changeCategoryHandler = (e) => setCategory(e.target.value);\r\n  const changePriceHandler = (e) => setPrice(e.target.value);\r\n  const changeQuantityHandler = (e) => setQuantity(e.target.value);\r\n  const changeStatusHandler = () => {\r\n    setStatus(status === \"PUBLIC\" ? \"PRIVATE\" : \"PUBLIC\");\r\n  };\r\n  const changeImageHandler = async (e) => {\r\n    const file = e?.target?.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        setFile(file);\r\n        setSrc(reader.result);\r\n      };\r\n    }\r\n  };\r\n\r\n  const setProductData = ({\r\n    name,\r\n    description,\r\n    category,\r\n    status,\r\n    image,\r\n    price,\r\n    quantity,\r\n  }) => {\r\n    setName(name);\r\n    setDescription(description);\r\n    setCategory(category._id);\r\n    setStatus(status);\r\n    setPrice(price);\r\n    setQuantity(quantity);\r\n    setSrc(image);\r\n    setFile(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (edit) {\r\n        setProductLoading(true);\r\n        const productResponse = await AdminAxios.get(Api.ADMIN_PRODUCT(id));\r\n        setProductData(productResponse.data.product);\r\n        setProductLoading(false);\r\n      }\r\n    })();\r\n\r\n    (async () => {\r\n      const categoriesResponse = await Axios.get(Api.GET_CATEGORIES);\r\n      setCategories(categoriesResponse.data.categories);\r\n    })();\r\n  }, []);\r\n\r\n  const createProductHandler = (e) => {\r\n    e.preventDefault();\r\n    if (edit) {\r\n      dispatch(\r\n        editProduct({\r\n          id,\r\n          name,\r\n          description,\r\n          file,\r\n          status,\r\n          category,\r\n          price,\r\n          quantity,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        createProduct({\r\n          name,\r\n          description,\r\n          file,\r\n          status,\r\n          category,\r\n          price,\r\n          quantity,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {productLoading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\" className={classes.heading}>\r\n            {edit ? \"Edit\" : \"Create\"} Product\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={createProductHandler}>\r\n            <TextField\r\n              label=\"Name\"\r\n              className={classes.textField}\r\n              value={name}\r\n              onChange={changeNameHandler}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={4}\r\n              value={description}\r\n              onChange={changeDescriptionHandler}\r\n            />\r\n            <TextField\r\n              select\r\n              label=\"Category\"\r\n              value={category}\r\n              onChange={changeCategoryHandler}\r\n            >\r\n              {categories.map(({ _id, name }) => (\r\n                <MenuItem key={_id} value={_id}>\r\n                  {name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <input\r\n              type=\"file\"\r\n              id=\"fileInput\"\r\n              accept=\"image/png, image/jpg, image/jpeg, image/webp\"\r\n              hidden\r\n              onChange={changeImageHandler}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ color: \"white\" }}\r\n              component=\"label\"\r\n              htmlFor=\"fileInput\"\r\n              endIcon={<CameraAltOutlined />}\r\n              size=\"small\"\r\n            >\r\n              Upload Image\r\n            </Button>\r\n            <div className={classes.img}>\r\n              <img src={src} />\r\n            </div>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={status === \"PUBLIC\"}\r\n                  onChange={changeStatusHandler}\r\n                />\r\n              }\r\n              label={status}\r\n            />\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Price\"\r\n              value={price}\r\n              onChange={changePriceHandler}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Quantity\"\r\n              value={quantity}\r\n              onChange={changeQuantityHandler}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ color: \"white\" }}\r\n              size=\"large\"\r\n              disabled={loading}\r\n              endIcon={\r\n                loading ? <CircularProgress size={20} color=\"primary\" /> : null\r\n              }\r\n            >\r\n              {edit ? \"Edit\" : \"Create\"}\r\n            </Button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\ProductForm\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Categories\\index.js",["353"],"import { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  TableCell,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Add, EditOutlined, DeleteOutlineOutlined } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCategories, deleteCategory } from \"../../../redux/slices/admin\";\r\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\r\n\r\nexport const Categories = withAdminAuth(true)((props) => {\r\n  const classes = useStyles();\r\n  const { push } = useHistory();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.admin.contentLoading);\r\n  const categories = useSelector((state) => state.admin.categories);\r\n  const deleteLoading = useSelector((state) => state.admin.authLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {loading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\" className={classes.heading}>\r\n            Categories\r\n          </Typography>\r\n\r\n          <div className={classes.container}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              style={{ marginLeft: \"auto\", display: \"flex\" }}\r\n              size=\"large\"\r\n              startIcon={<Add />}\r\n              onClick={() => push(\"/admin/create-category\")}\r\n            >\r\n              Create\r\n            </Button>\r\n\r\n            <TableContainer\r\n              component={Paper}\r\n              className={classes.tableContainer}\r\n            >\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {categories.map(({ _id, name }) => (\r\n                    <TableRow key={_id}>\r\n                      <TableCell>{name}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {deleteLoading ? (\r\n                          <CircularProgress size={20} color=\"primary\" />\r\n                        ) : (\r\n                          <>\r\n                            <IconButton\r\n                              onClick={() =>\r\n                                push(`/admin/edit-category/${_id}`)\r\n                              }\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              style={{ marginRight: \"10px\" }}\r\n                            >\r\n                              <EditOutlined />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              size=\"small\"\r\n                              onClick={() => dispatch(deleteCategory(_id))}\r\n                            >\r\n                              <DeleteOutlineOutlined />\r\n                            </IconButton>\r\n                          </>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\Categories\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\CategoryForm\\index.js",["354"],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\adminPages\\CategoryForm\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\index.js",["355","356"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { Payment } from \"./Payment\";\r\nimport { Shipping } from \"./Shipping\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPaymentIntent } from \"../../../redux/slices/order\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { UserAxios } from \"../../../api/instances\";\r\nimport * as Api from \"../../../api/endpoints\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { emptyCart } from \"../../../redux/slices/user\";\r\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HY7L7IuPlgS5Yt8yUJxodsQVLzRImwyhBycWSTi4njwihcuahtqN2dUAAwaYDG2ZlErSFZ2eFHwM18uYlIRVKvF00BK4ecBy6\"\r\n);\r\n\r\nconst getSteps = () => [\"Shipping Address\", \"Payment Info\"];\r\n\r\nconst Checkout = withUserAuth(true)((props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const contentLoading = useSelector((state) => state.orders.contentLoading);\r\n  const clientSecret = useSelector((state) => state.orders.clientSecret);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = getSteps();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [processing, setProcessing] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(createPaymentIntent());\r\n  }, []);\r\n\r\n  const changeCountryHandler = (e) => setCountry(e.target.value);\r\n  const changeCityHandler = (e) => setCity(e.target.value);\r\n  const changeAddress1Handler = (e) => setAddress1(e.target.value);\r\n  const changeAddress2Handler = (e) => setAddress2(e.target.value);\r\n  const changeZipCodeHandler = (e) => {\r\n    if (isNaN(Number(e.target.value))) return;\r\n    setZipCode(e.target.value.trim());\r\n  };\r\n\r\n  const isStepSkipped = (step) => skipped.has(step);\r\n\r\n  const nextStepHandler = () => {\r\n    const newSkipped = [...skipped.values(), activeStep];\r\n    setSkipped(new Set([...newSkipped]));\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setProcessing(true);\r\n\r\n      const payload = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      });\r\n\r\n      if (payload.error) {\r\n        setProcessing(false);\r\n        return NotificationManager.error(payload.error.message);\r\n      }\r\n      const res = await UserAxios.post(Api.CREATE_ORDER, {\r\n        country,\r\n        city,\r\n        address1,\r\n        address2,\r\n        zipCode,\r\n      });\r\n\r\n      dispatch(emptyCart());\r\n\r\n      NotificationManager.success(\"Order placed!\");\r\n\r\n      history.replace(\"/\");\r\n      setProcessing(false);\r\n    } catch (error) {\r\n      NotificationManager.error(error.message);\r\n    }\r\n    setProcessing(false);\r\n  };\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Shipping\r\n            country={country}\r\n            city={city}\r\n            address1={address1}\r\n            address2={address2}\r\n            zipCode={zipCode}\r\n            changeCountryHandler={changeCountryHandler}\r\n            changeCityHandler={changeCityHandler}\r\n            changeAddress1Handler={changeAddress1Handler}\r\n            changeAddress2Handler={changeAddress2Handler}\r\n            changeZipCodeHandler={changeZipCodeHandler}\r\n            nextStepHandler={nextStepHandler}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <Payment paymentHandler={paymentHandler} processing={processing} />\r\n        );\r\n      default:\r\n        return <p>No Content</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {contentLoading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label, index) => {\r\n              let stepProps = {};\r\n              if (isStepSkipped(index)) {\r\n                stepProps.completed = true;\r\n              }\r\n\r\n              return (\r\n                <Step key={label} {...stepProps}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              );\r\n            })}\r\n          </Stepper>\r\n\r\n          {getStepContent(activeStep)}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n\r\nconst Component = () => (\r\n  <Elements stripe={stripePromise}>\r\n    <Checkout />\r\n  </Elements>\r\n);\r\n\r\nexport { Component as Checkout };\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\Payment.js",["357","358","359"],"import { useState } from \"react\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nexport const Payment = (props) => {\r\n  const classes = useStyles();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  // const [disabled, setDisabled] = useState(true);\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Josefin Sans, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form className={classes.cardForm} onSubmit={props.paymentHandler}>\r\n        <div className={classes.card}>\r\n          <CardElement options={cardStyle} />\r\n        </div>\r\n        <Button\r\n          disabled={props.processing}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ color: \"white\" }}\r\n          endIcon={props.processing ? <CircularProgress size={20} /> : null}\r\n        >\r\n          Pay Now\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\clientPages\\Checkout\\Shipping.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\redux\\slices\\order.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\AddReview\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\AddReview\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Orders\\index.js",["360","361"],"import { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchOrders } from \"../../../redux/slices/order\";\r\nimport { fetchAdminOrders } from \"../../../redux/slices/admin\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Orders = ({ admin }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector((state) =>\r\n    admin ? state.admin.orders : state.orders.orders\r\n  );\r\n  const contentLoading = useSelector((state) =>\r\n    admin ? state.admin.contentLoading : state.orders.contentLoading\r\n  );\r\n  const adminExist = localStorage.getItem(\"adminToken\");\r\n  const userExist = localStorage.getItem(\"userToken\");\r\n\r\n  useEffect(() => {\r\n    if (admin && !adminExist) {\r\n      history.replace(\"/admin/login\");\r\n    }\r\n    if (!admin && !userExist) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [userExist, adminExist]);\r\n\r\n  useEffect(() => {\r\n    dispatch(admin ? fetchAdminOrders() : fetchOrders());\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {contentLoading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography className={classes.heading} variant=\"h3\">\r\n            Orders\r\n          </Typography>\r\n\r\n          <Grid container spacing={4}>\r\n            {orders.map((order) => {\r\n              const items = order?.items?.reduce(\r\n                (total, item) => item.quantity + total,\r\n                0\r\n              );\r\n\r\n              return (\r\n                <Grid key={order._id} item md={4} sm={6} xs={12}>\r\n                  <Card className={classes.card}>\r\n                    <Typography>\r\n                      <span>ID</span> <Chip label={order._id} size=\"small\" />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span>Products</span> {order.items.length}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span>Items</span> {items}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span>Date</span> {moment(order.date).fromNow()}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span>Price</span> {order.price}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span>Status</span>{\" \"}\r\n                      <Chip\r\n                        style={{ color: \"white\" }}\r\n                        label={order.status}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={() =>\r\n                        admin\r\n                          ? history.push(`/admin/order/${order._id}`)\r\n                          : history.push(`/order/${order._id}`)\r\n                      }\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Order\\index.js",["362","363","364"],"import { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  Chip,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  CardActions,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, Link, useHistory, Route } from \"react-router-dom\";\r\nimport { fetchOrder } from \"../../../redux/slices/order\";\r\nimport { fetchAdminOrder, editAdminOrder } from \"../../../redux/slices/admin\";\r\nimport moment from \"moment\";\r\nimport { AddReview } from \"../../../components/AddReview/\";\r\n\r\nconst showStatus = (status) => {\r\n  switch (status) {\r\n    case \"ORDERED\":\r\n      return \"PACKED\";\r\n    case \"PACKED\":\r\n      return \"SHIPPED\";\r\n    case \"SHIPPED\":\r\n      return \"DELIVERED\";\r\n    default:\r\n      return \"ORDER COMPLETED\";\r\n  }\r\n};\r\n\r\nexport const Order = ({ admin }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const contentLoading = useSelector((state) =>\r\n    admin ? state.admin.contentLoading : state.orders.contentLoading\r\n  );\r\n  const order = useSelector((state) =>\r\n    admin ? state.admin.order : state.orders.order\r\n  );\r\n  const { id } = useParams();\r\n  const items = order?.items?.reduce((total, item) => item.quantity + total, 0);\r\n  const buttonLoading = useSelector((state) => state.admin.authLoading);\r\n  const adminExist = localStorage.getItem(\"adminToken\");\r\n  const userExist = localStorage.getItem(\"userToken\");\r\n\r\n  useEffect(() => {\r\n    if (admin && !adminExist) {\r\n      history.replace(\"/admin/login\");\r\n    }\r\n    if (!admin && !userExist) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [userExist, adminExist]);\r\n\r\n  useEffect(() => {\r\n    dispatch(admin ? fetchAdminOrder(id) : fetchOrder(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {contentLoading ? (\r\n        <Typography>Loading...</Typography>\r\n      ) : (\r\n        <>\r\n          <Typography className={classes.heading} variant=\"h3\">\r\n            Order Details\r\n          </Typography>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item md={6} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Typography>\r\n                  <span>Order ID</span> <Chip label={order?._id} size=\"small\" />\r\n                </Typography>\r\n                <Typography>\r\n                  <span>Products</span> {order?.items.length}\r\n                </Typography>\r\n                <Typography>\r\n                  <span>Items</span> {items}\r\n                </Typography>\r\n                <Typography>\r\n                  <span>Date</span> {moment(order?.date).fromNow()}\r\n                </Typography>\r\n                <Typography>\r\n                  <span>Price</span> ${order?.price}\r\n                </Typography>\r\n                <Typography>\r\n                  <span>Status</span>{\" \"}\r\n                  <Chip\r\n                    label={order?.status}\r\n                    size=\"small\"\r\n                    style={{ color: \"white\", fontWeight: \"bold\" }}\r\n                    color=\"primary\"\r\n                  />\r\n                </Typography>\r\n                {admin ? (\r\n                  <>\r\n                    {order?.status === \"DELIVERED\" ? null : (\r\n                      <Typography>\r\n                        <span>Change Status:</span>\r\n                      </Typography>\r\n                    )}\r\n                    <Button\r\n                      disabled={order?.status === \"DELIVERED\" || buttonLoading}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        dispatch(\r\n                          editAdminOrder({\r\n                            id,\r\n                            status: showStatus(order?.status),\r\n                          })\r\n                        )\r\n                      }\r\n                      endIcon={\r\n                        buttonLoading ? <CircularProgress size={20} /> : null\r\n                      }\r\n                    >\r\n                      {showStatus(order?.status)}\r\n                    </Button>\r\n                  </>\r\n                ) : null}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\">Shipping Address</Typography>\r\n                <Typography>{order?.shippingAddress?.country}</Typography>\r\n                <Typography>{order?.shippingAddress?.city}</Typography>\r\n                <Typography>{order?.shippingAddress?.address1}</Typography>\r\n                <Typography>{order?.shippingAddress?.address2}</Typography>\r\n                <Typography>{order?.shippingAddress?.zipCode}</Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography variant=\"h4\" className={classes.heading}>\r\n            Products\r\n          </Typography>\r\n\r\n          <Grid container spacing={5}>\r\n            {order?.items?.map((item) => {\r\n              let isAddReview = false;\r\n              const reviewExist = item.product.reviews?.find(\r\n                (review) => review.order == order._id\r\n              );\r\n\r\n              console.log(reviewExist);\r\n\r\n              if (order.status === \"DELIVERED\" && !reviewExist && !admin) {\r\n                isAddReview = true;\r\n              }\r\n\r\n              return (\r\n                <Grid key={item._id} item xs={12} sm={6} lg={4}>\r\n                  <Card className={classes.product}>\r\n                    <CardActionArea\r\n                      onClick={() =>\r\n                        history.push(`/product/${item.product._id}`)\r\n                      }\r\n                    >\r\n                      <CardMedia\r\n                        style={{ height: \"250px\" }}\r\n                        className={classes.media}\r\n                        image={item.product.image}\r\n                        title={item.product.name}\r\n                      />\r\n                    </CardActionArea>\r\n\r\n                    <CardContent>\r\n                      <Typography\r\n                        className={classes.productName}\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/product/${item.product._id}`}\r\n                      >\r\n                        {item.product.name}\r\n                      </Typography>\r\n                      <Typography>\r\n                        <span>Quantity</span> {item.quantity}\r\n                      </Typography>\r\n                      <Typography>\r\n                        <span>Price</span> ${item.product.price}\r\n                      </Typography>\r\n                      <Typography>\r\n                        <span>Total Price</span>{\" \"}\r\n                        {item.quantity * item.product.price}\r\n                      </Typography>\r\n\r\n                      {reviewExist ? (\r\n                        <Button variant=\"contained\" disabled>\r\n                          Already reviewed!\r\n                        </Button>\r\n                      ) : null}\r\n                    </CardContent>\r\n\r\n                    {isAddReview && (\r\n                      <CardActions>\r\n                        <Button\r\n                          style={{ color: \"white\" }}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              `/order/${id}/review/${item.product._id}`\r\n                            )\r\n                          }\r\n                        >\r\n                          Add Review\r\n                        </Button>\r\n                      </CardActions>\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      <Route\r\n        path={`/order/${id}/review/:productId`}\r\n        render={() => <AddReview order={id} />}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Orders\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\pages\\pages\\Order\\style.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Footer\\index.js",[],"D:\\Projects\\Ecommerce\\frontend\\src\\components\\Footer\\style.js",[],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":45,"column":6,"nodeType":"371","endLine":45,"endColumn":8,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":46,"column":15,"nodeType":"375","messageId":"376","endLine":46,"endColumn":30},{"ruleId":"369","severity":1,"message":"377","line":27,"column":40,"nodeType":"371","endLine":27,"endColumn":42,"suggestions":"378"},{"ruleId":"369","severity":1,"message":"379","line":13,"column":8,"nodeType":"371","endLine":13,"endColumn":14,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":6,"column":3,"nodeType":"383","messageId":"384","endLine":6,"endColumn":12},{"ruleId":"381","severity":1,"message":"385","line":14,"column":10,"nodeType":"383","messageId":"384","endLine":14,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":18,"column":6,"nodeType":"371","endLine":18,"endColumn":8,"suggestions":"386"},{"ruleId":"369","severity":1,"message":"370","line":16,"column":6,"nodeType":"371","endLine":16,"endColumn":8,"suggestions":"387"},{"ruleId":"381","severity":1,"message":"388","line":16,"column":3,"nodeType":"383","messageId":"384","endLine":16,"endColumn":9},{"ruleId":"369","severity":1,"message":"389","line":37,"column":6,"nodeType":"371","endLine":37,"endColumn":8,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":48,"column":17,"nodeType":"393","endLine":48,"endColumn":44},{"ruleId":"369","severity":1,"message":"389","line":18,"column":6,"nodeType":"371","endLine":18,"endColumn":8,"suggestions":"394"},{"ruleId":"381","severity":1,"message":"395","line":4,"column":3,"nodeType":"383","messageId":"384","endLine":4,"endColumn":22},{"ruleId":"373","severity":1,"message":"374","line":27,"column":15,"nodeType":"375","messageId":"376","endLine":27,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":250,"column":28,"nodeType":"398","messageId":"399","endLine":250,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":295,"column":28,"nodeType":"398","messageId":"399","endLine":295,"endColumn":30},{"ruleId":"369","severity":1,"message":"379","line":13,"column":8,"nodeType":"371","endLine":13,"endColumn":15,"suggestions":"400"},{"ruleId":"381","severity":1,"message":"401","line":3,"column":3,"nodeType":"383","messageId":"384","endLine":3,"endColumn":9},{"ruleId":"381","severity":1,"message":"402","line":4,"column":3,"nodeType":"383","messageId":"384","endLine":4,"endColumn":10},{"ruleId":"381","severity":1,"message":"403","line":1,"column":21,"nodeType":"383","messageId":"384","endLine":1,"endColumn":29},{"ruleId":"381","severity":1,"message":"404","line":13,"column":3,"nodeType":"383","messageId":"384","endLine":13,"endColumn":13},{"ruleId":"381","severity":1,"message":"405","line":16,"column":3,"nodeType":"383","messageId":"384","endLine":16,"endColumn":15},{"ruleId":"381","severity":1,"message":"406","line":17,"column":3,"nodeType":"383","messageId":"384","endLine":17,"endColumn":24},{"ruleId":"381","severity":1,"message":"407","line":19,"column":3,"nodeType":"383","messageId":"384","endLine":19,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":37,"column":6,"nodeType":"371","endLine":37,"endColumn":8,"suggestions":"408"},{"ruleId":"381","severity":1,"message":"409","line":4,"column":3,"nodeType":"383","messageId":"384","endLine":4,"endColumn":17},{"ruleId":"391","severity":1,"message":"392","line":55,"column":13,"nodeType":"393","endLine":55,"endColumn":40},{"ruleId":"369","severity":1,"message":"410","line":91,"column":6,"nodeType":"371","endLine":91,"endColumn":8,"suggestions":"411"},{"ruleId":"391","severity":1,"message":"392","line":178,"column":15,"nodeType":"393","endLine":178,"endColumn":32},{"ruleId":"369","severity":1,"message":"370","line":33,"column":6,"nodeType":"371","endLine":33,"endColumn":8,"suggestions":"412"},{"ruleId":"369","severity":1,"message":"410","line":44,"column":6,"nodeType":"371","endLine":44,"endColumn":8,"suggestions":"413"},{"ruleId":"369","severity":1,"message":"370","line":51,"column":6,"nodeType":"371","endLine":51,"endColumn":8,"suggestions":"414"},{"ruleId":"381","severity":1,"message":"415","line":85,"column":13,"nodeType":"383","messageId":"384","endLine":85,"endColumn":16},{"ruleId":"381","severity":1,"message":"403","line":1,"column":10,"nodeType":"383","messageId":"384","endLine":1,"endColumn":18},{"ruleId":"381","severity":1,"message":"416","line":9,"column":9,"nodeType":"383","messageId":"384","endLine":9,"endColumn":15},{"ruleId":"381","severity":1,"message":"417","line":10,"column":9,"nodeType":"383","messageId":"384","endLine":10,"endColumn":17},{"ruleId":"369","severity":1,"message":"418","line":38,"column":6,"nodeType":"371","endLine":38,"endColumn":29,"suggestions":"419"},{"ruleId":"369","severity":1,"message":"420","line":42,"column":6,"nodeType":"371","endLine":42,"endColumn":8,"suggestions":"421"},{"ruleId":"369","severity":1,"message":"418","line":61,"column":6,"nodeType":"371","endLine":61,"endColumn":29,"suggestions":"422"},{"ruleId":"369","severity":1,"message":"420","line":65,"column":6,"nodeType":"371","endLine":65,"endColumn":10,"suggestions":"423"},{"ruleId":"396","severity":1,"message":"424","line":153,"column":42,"nodeType":"398","messageId":"399","endLine":153,"endColumn":44},"no-native-reassign",["425"],"no-negated-in-lhs",["426"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["427"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'replace'. Either include it or remove the dependency array.",["429"],"no-unused-vars","'TableHead' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.",["430"],["431"],"'Avatar' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["432"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["433"],"'createEntityAdapter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["434"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'useState' is defined but never used.","'IconButton' is defined but never used.","'EditOutlined' is defined but never used.","'DeleteOutlineOutlined' is defined but never used.","'KeyboardArrowDown' is defined but never used.",["435"],"'TableContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'edit' and 'id'. Either include them or remove the dependency array.",["436"],["437"],["438"],["439"],"'res' is assigned a value but never used.","'stripe' is assigned a value but never used.","'elements' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'admin' and 'history'. Either include them or remove the dependency array.",["440"],"React Hook useEffect has missing dependencies: 'admin' and 'dispatch'. Either include them or remove the dependency array.",["441"],["442"],["443"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"444","fix":"450"},{"desc":"444","fix":"451"},{"desc":"452","fix":"453"},{"desc":"452","fix":"454"},{"desc":"455","fix":"456"},{"desc":"444","fix":"457"},{"desc":"458","fix":"459"},{"desc":"444","fix":"460"},{"desc":"458","fix":"461"},{"desc":"444","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"463","fix":"467"},{"desc":"468","fix":"469"},"Update the dependencies array to be: [dispatch]",{"range":"470","text":"471"},"Update the dependencies array to be: [history]",{"range":"472","text":"473"},"Update the dependencies array to be: [replace, user]",{"range":"474","text":"475"},{"range":"476","text":"471"},{"range":"477","text":"471"},"Update the dependencies array to be: [dispatch, id]",{"range":"478","text":"479"},{"range":"480","text":"479"},"Update the dependencies array to be: [admin, replace]",{"range":"481","text":"482"},{"range":"483","text":"471"},"Update the dependencies array to be: [edit, id]",{"range":"484","text":"485"},{"range":"486","text":"471"},{"range":"487","text":"485"},{"range":"488","text":"471"},"Update the dependencies array to be: [userExist, adminExist, admin, history]",{"range":"489","text":"490"},"Update the dependencies array to be: [admin, dispatch]",{"range":"491","text":"492"},{"range":"493","text":"490"},"Update the dependencies array to be: [admin, dispatch, id]",{"range":"494","text":"495"},[1315,1317],"[dispatch]",[779,781],"[history]",[427,433],"[replace, user]",[728,730],[614,616],[1066,1068],"[dispatch, id]",[716,718],[448,455],"[admin, replace]",[1001,1003],[2907,2909],"[edit, id]",[1049,1051],[1446,1448],[2012,2014],[1137,1160],"[userExist, adminExist, admin, history]",[1251,1253],"[admin, dispatch]",[1766,1789],[1882,1886],"[admin, dispatch, id]"]